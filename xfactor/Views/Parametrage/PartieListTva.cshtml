@model xfactor.Models.TR_TVA

@using (Html.BeginForm("PartieListTva", "Parametrage",new {id="formTva"))
{
    @Html.AntiForgeryToken()
    
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Libellé", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.LIB_TVA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LIB_TVA, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Valeur", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.VAL_TVA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VAL_TVA, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Ajouter" class="btn btn-primary pull-right" />
            </div>
        </div>

}


<script src="~/Content/js/plugins/jquery.validate.min.js"></script>
<script src="~/Content/localization/messages_fr.js"></script>
<script>
    $("#btn").click(function () { alert("test");})
    $("#cpform").validate({
        rules: {
            // compound rule
            LIB_TVA: {
                required: true
              
            },
            VAL_TVA: {
                required: true,
            }
        },
   
        highlight: function (element) {
            $(element).closest('.form-group').addClass('has-error');
        },
        unhighlight: function (element) {
            $(element).closest('.form-group').removeClass('has-error').addClass('has-success');
        }


    });
</script>