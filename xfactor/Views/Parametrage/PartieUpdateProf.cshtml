@model xfactor.Models.TR_ACTPROF_BCT

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Code_SousClasse)
    <div class="form-group">
        @Html.Label("Code Secteur", htmlAttributes: new { @class = "control-label" })
        @Html.EditorFor(model => model.Code_Section, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Code_Section, "", new { @class = "text-danger" })
    </div>

        <div class="form-group">
            @Html.Label("Secteur", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Section, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Section, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Code Sous Secteur", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Code_SousSection, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Code_SousSection, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Sous Secteur", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.SousSection, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SousSection, "", new { @class = "text-danger" })>
        </div>

        <div class="form-group">
            @Html.Label("Code Activité", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Code_Activité, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Code_Activité, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Code Classe", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Code_Classe, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Code_Classe, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Classe", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Classe, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Classe, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Code Sous Classe", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Code_SousClasse, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Code_SousClasse, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.Label("Sous Classe", htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.SousClasse, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SousClasse, "", new { @class = "text-danger" })
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Modifier" class="btn btn-primary pull-right" />
            </div>
        </div>

}
