
@{
    ViewBag.Title = "BordereauAuto";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section header {

    <h1>
        Bordereaux

    </h1>
    <ol class="breadcrumb">
        <li><a href="/Home/Index"><i class="fa fa-dashboard"></i> Accueil</a></li>
        <li class="active"> Bordereaux </li>
        <li class="active">Ajouter Bordereau Par Excel</li>
    </ol>
}



<style>
    @@media only screen and (max-width: 800px) {

        /* Force table to not be like tables anymore */
        #no-more-tables table,
        #no-more-tables thead,
        #no-more-tables tbody,
        #no-more-tables th,
        #no-more-tables td,
        #no-more-tables tr {
            display: block;
        }
            /* Hide table headers (but not display: none;, for accessibility) */
            #no-more-tables thead tr {
                position: absolute;
                top: -9999px;
                left: -9999px;
            }

        #no-more-tables tr {
            border: 1px solid #ccc;
        }

        #no-more-tables td {
            /* Behave  like a "row" */
            border: none;
            border-bottom: 1px solid #eee;
            position: relative;
            padding-left: 50%;
            white-space: normal;
            text-align: left;
        }

            #no-more-tables td:before {
                /* Now like a table header */
                position: absolute;
                /* Top/left values mimic padding */
                top: 6px;
                left: 6px;
                width: 45%;
                padding-right: 10px;
                white-space: nowrap;
                text-align: left;
                font-weight: bold;
            }

            /*
    Label the data
    */
            #no-more-tables td:before {
                content: attr(data-title);
            }
    }
</style>


@if (TempData["notice"] != null)
{

    <div class="alert alert-success alert-dismissible fade in" id="success-alert">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        <strong> enregistrement a été effectué avec succès !</strong>
    </div>
}
<div style="display:none" id="ErrorHide">
    <div class="alert alert-danger alert-dismissible fade in" id="danger-alert">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        <strong id="errormessage"> </strong>
    </div>
</div>

<div class="modal-body" style="display:none" id="loaderin">
    <div class="modal-content">
        <div class="modal-body">
            <div id="loding_partie" class="loader">
                <div class="loader-inner">
                    <div class="loading one"></div>
                </div>
                <div class="loader-inner">
                    <div class="loading two"></div>
                </div>
                <div class="loader-inner">
                    <div class="loading three"></div>
                </div>
                <div class="loader-inner">
                    <div class="loading four"></div>
                </div>
            </div>
        </div>
    </div>
</div>




<form id="form1">
    <input type="file" id="excelfile" />
    <input type="button" id="viewfile" value="Export To Table" onclick="ExportToTable()" />
</form>

@using (Html.BeginForm("AjouterBorderea", "Bordereau", FormMethod.Post, new { id = "bordform" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="row">
    <div class="col-md-12">
        <div class="box box-default">
            <div class="box-header with-border">
                <h3 class="box-title">Entete Bordereau </h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                </div>
            </div>
            <div class="box-body">

                <div class="col-lg-12">

                    <div class="form-group">
                        <label class="control-label">Nom Adhérent: :</label>
                        <input type="text" name="" class="form-control input-sm" id="NameAdh" readonly />
                        <input type="text" name="REF_B" class="form-control input-sm" id="REF_CTR_BORD" readonly />
                    </div>

                    <div class="table-responsive " data-pattern="priority-columns">
                        <table cellspacing="0" id="" class="table table-small-font table-bordered table-striped ">
                            <thead>

                                <tr class="bg-primary">
                                    <th data-priority="3"><center>Réf Ctr</center></th>
                                    <th data-priority="1">Numéro Bordereau :</th>
                                    <th data-priority="1"><center>Année Bordereau :</center></th>
                                    <th data-priority="1"><center>Nombre de documents :</center></th>
                                    <th data-priority="1"><center>Montant Total :</center></th>
                                    <th data-priority="1">Date Borderau : </th>
                                    <th data-priority="1"></th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td class="form-group">
                                        <input name="REF_CTR_B" id="ctr" class="form-control input-sm " readonly />
                                    </td>
                                    <td class="form-group">
                                        @Html.Editor("NUM_B", new { htmlAttributes = new { @class = "form-control input-sm disabled", id = "NUM_B", @readonly = "readonly" } })
                                        @Html.ValidationMessage("NUM_B", "", new { @class = "text-danger" })
                                    </td>
                                    <td class="form-group">
                                        @Html.Editor("ANNEE_B", new { htmlAttributes = new { @class = "form-control input-sm", id = "ANNEE_B", @readonly = "readonly" } })
                                        @Html.ValidationMessage("ANNEE_B", "", new { @class = "text-danger" })
                                    </td>
                                    <td class="form-group">
                                        @Html.Editor("NB_DOC_B", new { htmlAttributes = new { @class = "form-control input-sm", id = "NB_DOC_B", @readonly = "readonly" } })

                                        @Html.ValidationMessage("NB_DOC_B", "", new { @class = "text-danger" })
                                    </td>

                                    <td class="form-group">
                                        @Html.Editor("MONT_TOT_B", new { htmlAttributes = new { @class = "form-control input-sm ConvertPointToComma", id = "MONT_TOT_B", @readonly = "readonly" } })
                                        @Html.ValidationMessage("MONT_TOT_B", "", new { @class = "text-danger" })
                                    </td>
                                    <td class="form-group">
                                        @Html.Editor("DAT_SAISIE_BO", new { htmlAttributes = new { @class = "form-control input-sm", type = "date", id = "DAT_SAISIE_BO", @readonly = "readonly" } })
                                        @Html.ValidationMessage("DAT_SAISIE_B", "", new { @class = "text-danger" })
                                    </td>
                                   
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <div class="row">
                        <div class="col-sm-2"></div>
                        <div class="col-md-8">
                            <button type="button" id="saveEntetBord" style="display:none"></button>


                        </div>
                        <div class="col-sm-2"></div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        @*<button type="button" class="btn btn-sm btn-success pull-right" id="AjouerLigne">Ajouter ligne </button>*@
        <div class="table-responsive " data-pattern="priority-columns">
            <table cellspacing="0" id="DetBord" class="table table-small-font table-bordered table-striped ">
                <thead>

                    <tr class="bg-primary">
                        <th data-priority="3"><center>Nom Acheteur</center></th>
                        <th data-priority="1">Type de document</th>
                        <th data-priority="1"><center>Réf document</center></th>
                        <th data-priority="1"><center>Date Document</center></th>
                        <th data-priority="1"><center>Montant document</center></th>
                        <th data-priority="1">Echéance </th>
                        <th data-priority="3">Mode de Réglement</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>



</div>
}




    <script src="~/Content/js/plugins/jquery/jquery-3.3.1.js"></script>
    <script src="~/Content/js/plugins/jquery.validate.min.js"></script>
    <script src="~/Content/localization/messages_fr.js"></script>

<script>

    $.validator.methods.range = function (value, element, param) {
        var globalizedValue = value.replace(",", ".");
        return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
    }

    $.validator.methods.number = function (value, element) {
        return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\,]\d{3})+)(?:[\,]\d+)?$/.test(value);
    }

    jQuery.extend(jQuery.validator.methods, {
        min: function (value, element, value2) {
            var val = value.replace(',', '.');
            return this.optional(element) || val >= value2;
        }
    });

    var form = $("#bordform");
    form.validate({
        rules: {
            // compound rule

            NUM_B: {
                required: true,
                number: true
            },
            ANNEE_B: {
                required: true,
                number: true

            },
            NB_DOC_B: {
                required: true, number: true
            },
            MONT_TOT_B: {
                required: true,
                number: true,
                min: 0
            },
            DAT_SAISIE_BO: {
                required: true
            }


        },
        //submitHandler: function(form) {
        //           // your ajax would go here
        //           alert('simulated ajax submit');
        //           return false;  // blocks regular submit since you have ajax
        //       },
        highlight: function (element) {
            $(element).closest('.form-group').addClass('has-error');
        },
        unhighlight: function (element) {
            $(element).closest('.form-group').removeClass('has-error').addClass('has-success');
        }


    });

    $.validator.addClassRules("verifmnt", {
        required: true,
        // number:true,
        min: 1
    });

    $.validator.addClassRules("verifdetbord", {
        required: true
    });

    $.validator.addClassRules("verifdatebord", {
        required: true
    });
    $.validator.addClassRules("verifehchu", {
        required: true, number: true,
        min: 1
    });
    function variffonction() {




        var TableUnique = new Array();
        var test = false;
        var test2 = false;
        for (i = 0; i < $(".verifdetbord").length; i++) {
            if (TableUnique.indexOf($(".verifdetbord").eq(i).val()) == -1) {
                TableUnique.push($(".verifdetbord").eq(i).val());
            }
            else {
                test = true;
                $(".verifdetbord").eq(i).css("background-color", "red");
                $(".verifdetbord").eq(i).css("color", "white");
                alert($(".verifdetbord").eq(i).val() + "  est deja saisi  dans l position " + Number(i + 1) + "   merci de verifier");
                break;
            }
        }
        // alert(test);
        //var test = false;
        //
        $(".verifdetbord").each(function (index) {
            var textf = $(this).val();
            $.ajax({
                url: "/Bordereau/Verife_Facture/" + $("#ctr").children("option:selected").val() + "/" + $(this).val(),
                type: "GET",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (result) {
                    if (result === true) {
                        $(".verifdetbord").eq(index).css("color", "red");
                        //this
                        test2 = true;
                        alert("la réference facture : " + textf + "  est deja enregistrer");
                    }

                    // $('#ctr').selectpicker('refresh');
                },
                async: false
            });
            if (test2 === true) { return false; }
        });

        ////var duplicate = false;
        ////$('input[class^=verifdetbord]').each(function () {
        ////    var $this = $(this);
        ////    if ($this.val() === '') { return; }
        ////    $('input[class^=verifdetbord]').not($this).each(function () {
        ////        if ($(this).val() == $this.val()) { duplicate = true; }
        ////    });
        ////});
        ////if (duplicate) alert('email must be valid');

        //$('#loaderin').show();



        if (test === false && test2 === false) {

            if (form.valid()) {
                // this is the id of the form
                // $("#bordform").submit(function (e) {
                $('#loaderin').show();
                //  e.preventDefault(); // avoid to execute the actual submit of the form.

                // var form = $(this);
                var url = form.attr('action');

                $.ajax({
                    type: "POST",
                    url: url,
                    data: form.serialize(), // serializes the form's elements.
                    success: function (data) {
                        if (data == "save") {
                            // alert(Data);
                            window.location.href = "/Bordereau/AjouterBordereau";
                            window.localStorage.clear();
                            //  window.location();
                        }

                        else {

                            $("#ErrorHide").show();
                            $("#errormessage").empty();
                            $("#errormessage").append(data);


                            $('#loaderin').hide();
                        }
                        //alert(data); // show response from the php script.
                    }
                });


                //  });
                // $("#").submit();
            };
        }

    }

</script>


    <script type="text/javascript">

        function ExportToTableEntet() {
            var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.xlsx|.xls)$/;
            /*Checks whether the file is a valid excel file*/
            if (regex.test($("#excelfile").val().toLowerCase())) {
                var xlsxflag = false; /*Flag for checking whether excel is .xls format or .xlsx format*/
                if ($("#excelfile").val().toLowerCase().indexOf(".xlsx") > 0) {
                    xlsxflag = true;
                }
                /*Checks whether the browser supports HTML5*/
                if (typeof (FileReader) != "undefined") {
                    $('#exceltable').empty();
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        var data = e.target.result;
                        /*Converts the excel data in to object*/
                        if (xlsxflag) {
                            var workbook = XLSX.read(data, { type: 'binary' });
                        }
                        else {
                            var workbook = XLS.read(data, { type: 'binary' });
                        }
                        /*Gets all the sheetnames of excel in to a variable*/
                        var sheet_name_list = workbook.SheetNames;

                        var cnt = 0; /*This is used for restricting the script to consider only first sheet of excel*/
                   /*Iterate through all sheets*/
                            /*Convert the cell value to Json*/
                            if (xlsxflag) {
                                var exceljson = XLSX.utils.sheet_to_json(workbook.Sheets["Entet_Bord"]);
                                var exceljsonDet = XLSX.utils.sheet_to_json(workbook.Sheets["Det_Bord"]);
                            }
                            else {
                                var exceljson = XLS.utils.sheet_to_row_object_array(workbook.Sheets["Entet_Bord"]);
                                var exceljsonDet = XLS.utils.sheet_to_row_object_array(workbook.Sheets["Det_Bord"]);
                            }
                            if (exceljson.length > 0 && cnt == 0) {

                                BinToEntetBord(exceljson, exceljsonDet.length);
                             
                            }

                            if (exceljsonDet.length > 0 && cnt == 0) {

                                BinToDetBord(exceljsonDet);

                            }
                        
                        $('#exceltable').show();
                    }
                    if (xlsxflag) {/*If excel file is .xlsx extension than creates a Array Buffer from excel*/
                        reader.readAsArrayBuffer($("#excelfile")[0].files[0]);
                    }
                    else {
                        reader.readAsBinaryString($("#excelfile")[0].files[0]);
                    }
                }
                else {
                    alert("Sorry! Your browser does not support HTML5!");
                }
            }
            else {
                alert("Please upload a valid Excel file!");
            }
        }



        function BinToEntetBord(jsondata,nb) {

            $.ajax({
                url: "/Bordereau/GetNameAdh/" + jsondata[0].Ref_adh,
                type: "GET",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (result) {
                    
                    $("#NameAdh").val(result);
                }
            });
            $.ajax({
                url: "/Bordereau/RechercheMaxBordParCtr/" + jsondata[0].Ref_ctr,
                type: "GET",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (result) {
                    var dt = new Date();
                    $('#NUM_B').empty();
                    $('#NUM_B').val(result);
                    // $('#ctr').selectpicker('refresh');
                }
            });
         

            $("#REF_CTR_BORD").val(jsondata[0].Ref_adh);
            $("#ctr").val(jsondata[0].Ref_ctr);
            $("#ANNEE_B").val(new Date().getFullYear());
            $("#NB_DOC_B").val(nb);
            var mnt=jsondata[0].Montant.toString();
            $("#MONT_TOT_B").val(mnt.replace(".", ","));

            var now = new Date(jsondata[0].Date_bord);
            var date = new Date(now.getFullYear(), now.getMonth(), now.getDate());
            var field = document.querySelector('#DAT_SAISIE_BO');
            field.value = date.getFullYear().toString() + '-' + (date.getMonth() + 1).toString().padStart(2, 0) +
                      '-' + date.getDate().toString().padStart(2, 0);

        }


        function BinToDetBord(jsondata) {
            $("#DetBord>tbody").empty();
            var str = "";
            for (var j = 0; j < jsondata.length; j++) {
              
                var ligne = "<tr>";
                var op = "";
                var colonne = "<td><select name='Det_Bord[" + j + "].REF_IND_DET_BORD' class='form-control input-sm defaultpicker NomAchteurs verifnomrequ' required>";
              function myFunction() {
                    var returnValue = null;
                    $.ajax({
                        url: "/Bordereau/GetNameAch/" + jsondata[j].Nom_Ach,
                        type: "GET",
                        contentType: "application/json;charset=UTF-8",
                        dataType: "json",
                        async: false,
                        success: function (result) { returnValue = result; }
                    }); return returnValue;  }
                 

              
              colonne = colonne + "<option value='" + jsondata[j].Nom_Ach + "' >" + myFunction() + "</option>";

                colonne = colonne + "</select></td>";
                

                var colonne2 = "<td><select name='Det_Bord[" + j + "].TYP_DET_BORD' class='form-control input-sm defaultpicker type_doc'>";
                switch (jsondata[j].Type_doc) {
                    case "fact": colonne2 = colonne2 + " <option value='fact' selected >FACTURE</option>   <option value='Caut'>CAUTION</option> <option value='bdc'>BON DE COMMANDE</option><option value='march'>MARCHE</option></select></td>";
                        break;
                    case "Caut": colonne2 = colonne2 + " <option value='fact'  >FACTURE</option>   <option value='Caut' selected>CAUTION</option> <option value='bdc'>BON DE COMMANDE</option><option value='march'>MARCHE</option></select></td>";
                        break;
                    case "bdc": colonne2 = colonne2 + " <option value='fact'  >FACTURE</option>   <option value='Caut'>CAUTION</option> <option value='bdc' selected>BON DE COMMANDE</option><option value='march'>MARCHE</option></select></td>";
                        break;
                    case "march": colonne2 = colonne2 + " <option value='fact'  >FACTURE</option>   <option value='Caut'>CAUTION</option> <option value='bdc'>BON DE COMMANDE</option><option value='march' selected>MARCHE</option></select></td>";
                        break;

                }
                var now = new Date(jsondata[j].Date_Doc);
                var date = new Date(now.getFullYear(), now.getMonth(), now.getDate());
             
                var field = date.getFullYear().toString() + '-' + (date.getMonth() + 1).toString().padStart(2, 0) +
                          '-' + date.getDate().toString().padStart(2, 0);
                var mntdet = jsondata[j].Montant_doc.toString();
                var colonne3 = "<td><input type='text' name='Det_Bord[" + j + "].REF_DET_BORD'  class='form-control input-sm verifdetbord REF_DET_BORD' value='" + jsondata[j].Réf_doc + " '/></td>" +
                     "<td><input type='date' name='Det_Bord[" + j + "].DAT_DET_BORD'  class='form-control input-sm verifdatebord DAT_DET_BORD'value='" + field + "'/></td>" +
                     "<td><input type='text' name='Det_Bord[" + j + "].COMM_DET_BORD'  onkeyup='calculateSum(event)' class='txt form-control input-sm verifmnt ConvertPointToComma COMM_DET_BORD 'value='" + mntdet.replace(".",",") + "'/></td>" +
                     "<td><input type='number' name='Det_Bord[" + j + "].ECH_DET_BORD'  class='form-control input-sm verifehchu ECH_DET_BORD' value='" + jsondata[j].Ech + "'/></td>";

                //$('.NomAchteurs').selectpicker('refresh');


                var colonne4 = "<td><select name='Det_Bord[" + j + "].MODE_REG_DET_BORD' class='form-control input-sm defaultpicker MODE_REG_DET_BORD' >";
                switch (jsondata[j].Mode_Rég) {
                    case "T": colonne4 = colonne4 + " <option value='T' selected>Traite</option><option value='V'>Virement</option> <option value='C'>Cheque</option> <option value='E'>Espece</option></select> </td>" + "</select> </td>";
                        break;
                    case "V": colonne4 = colonne4 + " <option value='T'>Traite</option><option value='V' selected>Virement</option> <option value='C'>Cheque</option> <option value='E'>Espece</option></select> </td>" + "</select> </td>";
                        break;
                    case "C": colonne4 = colonne4 + " <option value='T'>Traite</option><option value='V'>Virement</option> <option value='C' selected>Cheque</option> <option value='E'>Espece</option></select> </td>" + "</select> </td>";
                        break;
                    case "E": colonne4 = colonne4 + " <option value='T'>Traite</option><option value='V'>Virement</option> <option value='C'>Cheque</option> <option value='E' selected>Espece</option></select> </td>" + "</select> </td>";
                        break;

                }
                ligne = ligne + colonne + colonne2 + colonne3 + colonne4 + "</tr>";
                str = str + ligne;

   
            }
            $("#DetBord").append(str);
            $("#DetBord").append("<tr><td colspan='6'><button id='validerbord' onclick='variffonction()' disabled type='button' class='btn btn-success pull-right ' >   valider" +
             " </button></td><td>   <input type='text' id='sum1' readOnly  class='form-control input-sm'/></td></tr>");
            calculateSum();
        }

      

        function calculateSum(event) {

            var sum = 0;
            var monttc = parseFloat($("#MONT_TOT_B").val().replace(",", "."));
            //iterate through each textboxes and add the values
            $(".txt").each(function () {
                //add only if the value is number
                if (!isNaN(this.value.replace(",", ".")) && this.value.length != 0) {
                    sum += parseFloat(this.value.replace(",", "."));
                    $(this).css("background-color", "#FEFFB0");
                }
                else if (this.value.length != 0) {
                    $(this).css("background-color", "red");
                }
            });

            $("input#sum1").val(sum.toFixed(3));
            if (monttc.toFixed(3) == sum.toFixed(3)) {
                var te = true;
                $(".txt").each(function () {
                    if ($(this).val() == "") {
                        te = false; return false;
                    }
                });
                if (te) {
                    $("#validerbord").prop("disabled", false);
                }
                else {
                    $("#validerbord").attr("disabled", true);
                }
            }
            else {
                $("#validerbord").attr("disabled", true);
            }
        }

        function ExportToTable() {
            ExportToTableEntet();
        
        }
        function BindTable(jsondata, tableid) {/*Function used to convert the JSON array to Html Table*/
            var columns = BindTableHeader(jsondata, tableid); /*Gets all the column headings of Excel*/
            GetEnteteBord(jsondata);
            for (var i = 0; i < jsondata.length; i++) {
                var row$ = $('<tr/>');
                for (var colIndex = 0; colIndex < columns.length; colIndex++) {
                    var cellValue = jsondata[i][columns[colIndex]];
                    if (cellValue == null)
                        cellValue = "";
                    row$.append($('<td/>').html(cellValue));
                }
                $(tableid).append(row$);
            }
        }
        function GetEnteteBord(jsondata) {
            $("#REF_CTR_BORD").val(jsondata[0].ID);
            $("#ctr").val(jsondata[0].ID);
            $("#NUM_B").val(32);
            $("#ANNEE_B").val("2019");
            $("#NB_DOC_B").val(jsondata.length);
            $("#MONT_TOT_B").val(jsondata[0].MNT);
            $("#DAT_SAISIE_BO").val(jsondata[0].DATE);

        }


        function BindTableHeader(jsondata, tableid) {/*Function used to get all column names from JSON and bind the html table header*/
            var columnSet = [];
            var headerTr$ = $('<tr/>');
            for (var i = 0; i < jsondata.length; i++) {
                var rowHash = jsondata[i];
                for (var key in rowHash) {
                    if (rowHash.hasOwnProperty(key)) {
                        if ($.inArray(key, columnSet) == -1) {/*Adding each unique column names to a variable array*/
                            columnSet.push(key);
                            headerTr$.append($('<th/>').html(key));
                        }
                    }
                }
            }
            $(tableid).append(headerTr$);
            return columnSet;
        }
    </script>
