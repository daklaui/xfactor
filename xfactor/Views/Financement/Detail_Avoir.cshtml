

   <h2 class="modal-title">Details des  Avoirs</h2>
 <hr />
<div class="table-responsive " data-pattern="priority-columns">
    <table cellspacing="0" id="detav" class="table table-small-font table-bordered">
        <thead>

            <tr class="bg-primary">
                <th data-priority="3"><center>Reference</center></th>
                <th data-priority="1">Montant</th>
                <th data-priority="1"><center>Date Réception</center></th>
                <th data-priority="1"><center>Date Valeur</center></th>
                <th data-priority="1"><center>#</center></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in ViewBag.enc)
            {
                <tr>

                    <td>
                        @item.REF_ENC
                    </td>
                    @{decimal x;
                        if (item.MONT_ENC == null) { x = 0; } else { x = (decimal)item.MONT_ENC; }
                        DateTime dat1=(DateTime)item.DAT_RECEP_ENC;
                        DateTime dat2= (DateTime)item.DAT_VAL_ENC;
                    }
                    <td style="text-align:right">
                        @String.Format("{0:N3}", x)
                    </td>
                    <td>
                        @dat1.ToString("d")
                    </td>
                    <td>
                        @dat2.ToString("d")
                    </td>
                   @if (item.ADRESS_DOC_GED == "" || item.ADRESS_DOC_GED == null)
                   {
                    <td></td>
                   }
                   else
                   {
                    <td>
                        <a href="@item.ADRESS_DOC_GED" target="_blank"><i class="fa fa-fw fa-unlink"></i></a>
                    </td>
                   }


                </tr>
            }
        </tbody>
    </table>
</div>



<script>
    var buttonCommon = {
      
        exportOptions: {
    format: {
    body: function (data, row, column, node) {
        // Strip $ from salary column to make it numeric
        //  alert(data);
        cel = "";
        test = true;
        while (test)
        {
            if (column === 1) {
                cel = data.replace('&nbsp;', "");
                data = cel;
                // alert(data);
                //  alert(cel);
            }
            else { cel = data; }
            //   alert();
            console.log(data);
            console.log(cel.indexOf('&nbsp;'));
                     
            if (cel.indexOf('&nbsp;') >= 0) {

                test = true;
            }
            else { test = false;}
        }
        return cel.replace(",",".");
    }
    }
    }
    };

    $('#detav').DataTable({
        "language": {
            "sProcessing": "Traitement en cours...",
            "sSearch": "Rechercher&nbsp;:",
            "sLengthMenu": "Afficher _MENU_ &eacute;l&eacute;ments",
            "sInfo": "Affichage de l'&eacute;l&eacute;ment _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments",
            "sInfoEmpty": "Affichage de l'&eacute;l&eacute;ment 0 &agrave; 0 sur 0 &eacute;l&eacute;ment",
            "sInfoFiltered": "(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)",
            "sInfoPostFix": "",
            "sLoadingRecords": "Chargement en cours...",
            "sZeroRecords": "Aucun &eacute;l&eacute;ment &agrave; afficher",
            "sEmptyTable": "Aucune donn&eacute;e disponible dans le tableau",
            "oPaginate": {
                "sFirst": "Premier",
                "sPrevious": "Pr&eacute;c&eacute;dent",
                "sNext": "Suivant",
                "sLast": "Dernier"
            },
            "oAria": {
                "sSortAscending": ": activer pour trier la colonne par ordre croissant",
                "sSortDescending": ": activer pour trier la colonne par ordre d&eacute;croissant"
            },
            "select": {
                "rows": {
                    _: "%d lignes séléctionnées",
                    0: "Aucune ligne séléctionnée",
                    1: "1 ligne séléctionnée"
                }
            }
        },
        dom: 'Bfrtip',
        buttons: [

              $.extend(true, {}, buttonCommon, {
                  extend: 'copyHtml5', title: 'Detail_Avoir'
              }),
            $.extend(true, {}, buttonCommon, {
                extend: 'excelHtml5',  autoFilter: true, title: 'Detail_Avoir'
            }),
            $.extend(true, {}, {
                extend: 'pdfHtml5', title: 'Detail_Avoir', orientation: 'landscape',
                pageSize: 'LEGAL'
            })

            

        ],
        columnDefs: [
     { type: 'date-eu', targets: [2,3] }, {
         type: 'formatted-num', targets: [1]
     }

        ]
    });
</script>