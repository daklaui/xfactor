//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace xfactor.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="XPFactorModel", Namespace="http://schemas.datacontract.org/2004/07/SymatiqueGED_WS.Model")]
    [System.SerializableAttribute()]
    public partial class XPFactorModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Date_pieceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ID_ContratField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ID_PieceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Type_PieceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date_piece {
            get {
                return this.Date_pieceField;
            }
            set {
                if ((this.Date_pieceField.Equals(value) != true)) {
                    this.Date_pieceField = value;
                    this.RaisePropertyChanged("Date_piece");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID_Contrat {
            get {
                return this.ID_ContratField;
            }
            set {
                if ((object.ReferenceEquals(this.ID_ContratField, value) != true)) {
                    this.ID_ContratField = value;
                    this.RaisePropertyChanged("ID_Contrat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID_Piece {
            get {
                return this.ID_PieceField;
            }
            set {
                if ((object.ReferenceEquals(this.ID_PieceField, value) != true)) {
                    this.ID_PieceField = value;
                    this.RaisePropertyChanged("ID_Piece");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type_Piece {
            get {
                return this.Type_PieceField;
            }
            set {
                if ((object.ReferenceEquals(this.Type_PieceField, value) != true)) {
                    this.Type_PieceField = value;
                    this.RaisePropertyChanged("Type_Piece");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string date {
            get {
                return this.dateField;
            }
            set {
                if ((object.ReferenceEquals(this.dateField, value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResClass", Namespace="http://schemas.datacontract.org/2004/07/SymatiqueGED_WS.Model")]
    [System.SerializableAttribute()]
    public partial class ResClass : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDDocumentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IDDocument {
            get {
                return this.IDDocumentField;
            }
            set {
                if ((object.ReferenceEquals(this.IDDocumentField, value) != true)) {
                    this.IDDocumentField = value;
                    this.RaisePropertyChanged("IDDocument");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IXPFactor")]
    public interface IXPFactor {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXPFactor/Upload", ReplyAction="http://tempuri.org/IXPFactor/UploadResponse")]
        xfactor.ServiceReference1.ResClass Upload(xfactor.ServiceReference1.XPFactorModel document, byte[] file, string filename, string folderPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IXPFactor/Upload", ReplyAction="http://tempuri.org/IXPFactor/UploadResponse")]
        System.Threading.Tasks.Task<xfactor.ServiceReference1.ResClass> UploadAsync(xfactor.ServiceReference1.XPFactorModel document, byte[] file, string filename, string folderPath);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IXPFactorChannel : xfactor.ServiceReference1.IXPFactor, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class XPFactorClient : System.ServiceModel.ClientBase<xfactor.ServiceReference1.IXPFactor>, xfactor.ServiceReference1.IXPFactor {
        
        public XPFactorClient() {
        }
        
        public XPFactorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public XPFactorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XPFactorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XPFactorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public xfactor.ServiceReference1.ResClass Upload(xfactor.ServiceReference1.XPFactorModel document, byte[] file, string filename, string folderPath) {
            return base.Channel.Upload(document, file, filename, folderPath);
        }
        
        public System.Threading.Tasks.Task<xfactor.ServiceReference1.ResClass> UploadAsync(xfactor.ServiceReference1.XPFactorModel document, byte[] file, string filename, string folderPath) {
            return base.Channel.UploadAsync(document, file, filename, folderPath);
        }
    }
}
